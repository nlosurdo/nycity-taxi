name: CI Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker Buildx for building Docker images
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Build the Docker image
    - name: Build the Docker image
      run: docker build -t nyc-taxi:nyc-taxi-latest .

    # Run flake8 to lint the code
    - name: Lint code with flake8
      run: docker run --rm nyc-taxi:nyc-taxi-latest flake8 .

    # Run tests with pytest
    - name: Test with pytest
      run: docker run --rm nyc-taxi:nyc-taxi-latest pytest || if [ $? -eq 5 ]; then echo "No tests found, continuing..."; else exit 1; fi

    # Install Databricks CLI
    - name: Install Databricks CLI
      run: pip install databricks-cli

    # Set up Databricks CLI authentication using secrets
    - name: Configure Databricks CLI
      run: databricks configure --token
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

    # Deploy Jobs in Databricks
    - name: Deploy Databricks Jobs
      run: |
        for job_file in $(ls jobs/*.json); do
          databricks jobs create --json-file $job_file || \
          databricks jobs reset --json-file $job_file
        done

    # Deploy Delta Live Table Pipelines
    - name: Deploy DLT Pipelines
      run: |
        for pipeline_file in $(ls pipelines/*.json); do
          databricks pipelines create --json $pipeline_file || \
          databricks pipelines update --json $pipeline_file
        done